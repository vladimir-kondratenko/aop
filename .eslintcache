[{"C:\\Users\\user\\WebstormProjects\\aop\\src\\index.tsx":"1","C:\\Users\\user\\WebstormProjects\\aop\\src\\reportWebVitals.ts":"2","C:\\Users\\user\\WebstormProjects\\aop\\src\\App.tsx":"3","C:\\Users\\user\\WebstormProjects\\aop\\src\\components\\layout\\index.tsx":"4","C:\\Users\\user\\WebstormProjects\\aop\\src\\components\\hedaer\\index.tsx":"5","C:\\Users\\user\\WebstormProjects\\aop\\src\\components\\aside\\index.tsx":"6","C:\\Users\\user\\WebstormProjects\\aop\\src\\components\\main\\index.tsx":"7","C:\\Users\\user\\WebstormProjects\\aop\\src\\components\\logo\\index.tsx":"8","C:\\Users\\user\\WebstormProjects\\aop\\src\\components\\menu\\index.tsx":"9","C:\\Users\\user\\WebstormProjects\\aop\\src\\components\\button\\index.tsx":"10","C:\\Users\\user\\WebstormProjects\\aop\\src\\components\\icons\\index.tsx":"11","C:\\Users\\user\\WebstormProjects\\aop\\src\\pages\\practical\\index.tsx":"12","C:\\Users\\user\\WebstormProjects\\aop\\src\\pages\\dashboard\\index.tsx":"13","C:\\Users\\user\\WebstormProjects\\aop\\src\\components\\page\\index.tsx":"14","C:\\Users\\user\\WebstormProjects\\aop\\src\\components\\input\\index.tsx":"15","C:\\Users\\user\\WebstormProjects\\aop\\src\\components\\entity\\index.tsx":"16","C:\\Users\\user\\WebstormProjects\\aop\\src\\components\\prompt\\index.tsx":"17","C:\\Users\\user\\WebstormProjects\\aop\\src\\components\\modal\\index.tsx":"18","C:\\Users\\user\\WebstormProjects\\aop\\src\\components\\files-tree\\index.tsx":"19"},{"size":500,"mtime":1610797220024,"results":"20","hashOfConfig":"21"},{"size":425,"mtime":499162500000,"results":"22","hashOfConfig":"21"},{"size":441,"mtime":1610798404158,"results":"23","hashOfConfig":"21"},{"size":650,"mtime":1610649199294,"results":"24","hashOfConfig":"21"},{"size":2634,"mtime":1610655035720,"results":"25","hashOfConfig":"21"},{"size":1272,"mtime":1610727786166,"results":"26","hashOfConfig":"21"},{"size":608,"mtime":1610660558728,"results":"27","hashOfConfig":"21"},{"size":3556,"mtime":1610650860135,"results":"28","hashOfConfig":"21"},{"size":950,"mtime":1610657491585,"results":"29","hashOfConfig":"21"},{"size":674,"mtime":1610661356300,"results":"30","hashOfConfig":"21"},{"size":1220,"mtime":1610652340793,"results":"31","hashOfConfig":"21"},{"size":3630,"mtime":1610842953254,"results":"32","hashOfConfig":"21"},{"size":437,"mtime":1610733685637,"results":"33","hashOfConfig":"21"},{"size":375,"mtime":1610657549436,"results":"34","hashOfConfig":"21"},{"size":1022,"mtime":1610739531648,"results":"35","hashOfConfig":"21"},{"size":1679,"mtime":1610814330469,"results":"36","hashOfConfig":"21"},{"size":1092,"mtime":1610740129293,"results":"37","hashOfConfig":"21"},{"size":447,"mtime":1610738510364,"results":"38","hashOfConfig":"21"},{"size":6461,"mtime":1610842953245,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"lk64u4",{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79"},"C:\\Users\\user\\WebstormProjects\\aop\\src\\index.tsx",[],["80","81"],"C:\\Users\\user\\WebstormProjects\\aop\\src\\reportWebVitals.ts",[],"C:\\Users\\user\\WebstormProjects\\aop\\src\\App.tsx",[],"C:\\Users\\user\\WebstormProjects\\aop\\src\\components\\layout\\index.tsx",[],"C:\\Users\\user\\WebstormProjects\\aop\\src\\components\\hedaer\\index.tsx",[],"C:\\Users\\user\\WebstormProjects\\aop\\src\\components\\aside\\index.tsx",[],"C:\\Users\\user\\WebstormProjects\\aop\\src\\components\\main\\index.tsx",[],"C:\\Users\\user\\WebstormProjects\\aop\\src\\components\\logo\\index.tsx",[],"C:\\Users\\user\\WebstormProjects\\aop\\src\\components\\menu\\index.tsx",[],"C:\\Users\\user\\WebstormProjects\\aop\\src\\components\\button\\index.tsx",[],"C:\\Users\\user\\WebstormProjects\\aop\\src\\components\\icons\\index.tsx",[],"C:\\Users\\user\\WebstormProjects\\aop\\src\\pages\\practical\\index.tsx",[],"C:\\Users\\user\\WebstormProjects\\aop\\src\\pages\\dashboard\\index.tsx",[],"C:\\Users\\user\\WebstormProjects\\aop\\src\\components\\page\\index.tsx",[],"C:\\Users\\user\\WebstormProjects\\aop\\src\\components\\input\\index.tsx",[],"C:\\Users\\user\\WebstormProjects\\aop\\src\\components\\entity\\index.tsx",[],"C:\\Users\\user\\WebstormProjects\\aop\\src\\components\\prompt\\index.tsx",[],"C:\\Users\\user\\WebstormProjects\\aop\\src\\components\\modal\\index.tsx",[],"C:\\Users\\user\\WebstormProjects\\aop\\src\\components\\files-tree\\index.tsx",["82","83","84","85","86"],"import React, { useCallback, useEffect, useState } from 'react';\nimport cn from 'classnames';\nimport { DndProvider, DragSourceMonitor, useDrag, useDrop } from 'react-dnd';\nimport { HTML5Backend } from 'react-dnd-html5-backend';\nimport { TouchBackend } from 'react-dnd-touch-backend';\nimport './index.scss';\nimport { Entity, EntityData, EntityProps, EntityType } from '../entity';\nimport traverse from 'traverse';\n\nexport enum FILES_TREE_TYPES {\n  file = 'file',\n  folder = 'folder',\n}\n\nexport interface FilesTreeLeaf {\n  id: string;\n  type: FILES_TREE_TYPES;\n  name: string;\n  time: string;\n  inner: FilesTreeLeaf[];\n}\n\nexport interface FilesTreeProps {\n  tree: FilesTreeLeaf;\n  itemRenderer: (\n    props: FilesTreeLeaf,\n    tree: FilesTreeLeaf,\n    setTree: any,\n  ) => React.ReactChild;\n  classes?: {\n    plot?: string;\n    item?: string;\n  };\n}\n\nexport function FilesTree({\n  children,\n  className,\n  itemRenderer,\n  classes,\n  tree: initTree,\n  ...props\n}: React.DetailedHTMLProps<\n  React.HTMLAttributes<HTMLDivElement>,\n  HTMLDivElement\n> &\n  FilesTreeProps) {\n  const [tree, setTree] = useState(initTree);\n  return (\n    <DndProvider backend={HTML5Backend}>\n      <div className={cn('files-tree', className)}>\n        <FilesTreePlot\n          tree={tree}\n          setTree={setTree}\n          type={tree.type}\n          id={tree.id}\n          isRoot>\n          {tree.inner.map((leaf) => (\n            <FilesTreePlot\n              tree={tree}\n              setTree={setTree}\n              id={leaf.id}\n              type={leaf.type}\n              key={leaf.name + leaf.time}\n              className={classes?.plot}>\n              <FilesTreeItem\n                tree={tree}\n                setTree={setTree}\n                className={classes?.item}\n                type={leaf.type}\n                id={leaf.id}>\n                {itemRenderer(leaf, tree, setTree)}\n              </FilesTreeItem>\n            </FilesTreePlot>\n          ))}\n        </FilesTreePlot>\n      </div>\n    </DndProvider>\n  );\n}\n\nexport interface FilesTreePlotProps {\n  type: FILES_TREE_TYPES;\n  id: string;\n  tree: FilesTreeLeaf;\n  setTree: any;\n  isRoot?: boolean;\n  tag?: string;\n}\n\nexport function FilesTreePlot({\n  children,\n  className,\n  tag = 'div',\n  type,\n  id,\n  tree,\n  setTree,\n  isRoot,\n  ...props\n}: React.DetailedHTMLProps<\n  React.HTMLAttributes<HTMLDivElement>,\n  HTMLDivElement\n> &\n  FilesTreePlotProps) {\n  const [lastDropId, setLastDropId] = useState('');\n  const [{ isOver }, drop] = useDrop({\n    accept:\n      type === FILES_TREE_TYPES.folder\n        ? [FILES_TREE_TYPES.folder, FILES_TREE_TYPES.file]\n        : [],\n    drop: (item, monitor) => (monitor.isOver() ? { id } : undefined),\n    collect: (monitor) => ({ isOver: monitor.isOver() }),\n  });\n  const Tag: any = `${tag}`;\n  return (\n    <Tag\n      ref={drop}\n      className={cn('files-tree__plot', className, {\n        'files-tree__plot--is-over': isOver,\n        'files-tree__plot--root': isRoot,\n      })}\n      {...props}>\n      {children}\n    </Tag>\n  );\n}\n\nexport interface FilesTreeItemProps {\n  type: FILES_TREE_TYPES;\n  id: FilesTreeLeaf['id'];\n  tree: FilesTreeLeaf;\n  setTree: any;\n}\n\nexport function FilesTreeItem({\n  children,\n  className,\n  type,\n  id,\n  tree,\n  setTree,\n  ...props\n}: React.DetailedHTMLProps<\n  React.HTMLAttributes<HTMLDivElement>,\n  HTMLDivElement\n> &\n  FilesTreeItemProps) {\n  const [{ opacity }, dragRef] = useDrag({\n    item: { type, id },\n    end: (item, monitor) => {\n      const dropResult = monitor.getDropResult();\n      if (dropResult == null) {\n        return;\n      }\n      moveItem(tree, setTree, item?.id, dropResult.id);\n    },\n    collect: (monitor) => ({\n      opacity: monitor.isDragging() ? 0.5 : 1,\n    }),\n  });\n  return (\n    <div\n      ref={dragRef}\n      className={cn('files-tree__item', className)}\n      style={{ opacity }}\n      {...props}>\n      {children}\n    </div>\n  );\n}\n\nfunction moveItem(\n  tree: FilesTreeLeaf,\n  setTree: any,\n  dragId: FilesTreeLeaf['id'] | undefined,\n  dropId: FilesTreeLeaf['id'] | undefined,\n) {\n  if (dropId == null || dragId == null) {\n    return;\n  }\n  const copiedTree = { ...tree };\n  // need to improve big O and reduce memory consuming\n  traverse(copiedTree).forEach(function (node) {\n    if (node?.id === dragId) {\n      const copiedDrag = traverse.clone(this.node);\n      if (this.parent) {\n        this.remove(true);\n        traverse(copiedTree).forEach(function (node) {\n          if (node?.id === dropId) {\n            this.node.inner.push(copiedDrag);\n          }\n        });\n      }\n    }\n  });\n  setTree(copiedTree);\n}\n\nexport interface FilesTreeEntityProps {\n  leaf: FilesTreeLeaf;\n  tree: FilesTreeLeaf;\n  setTree: any;\n}\n\nexport function transformLeafToEntity(leaf: FilesTreeLeaf) {\n  let transformedEntityType: EntityType;\n  let transformedEntityInner: EntityData[] = [];\n  switch (leaf.type) {\n    case FILES_TREE_TYPES.file:\n      transformedEntityType = EntityType.text;\n      break;\n    case FILES_TREE_TYPES.folder:\n      transformedEntityType = EntityType.folder;\n      break;\n    default:\n      transformedEntityType = EntityType.text;\n  }\n  if (leaf.inner != null) {\n    transformedEntityInner = leaf.inner.map(transformLeafToEntity);\n  }\n  return {\n    ...leaf,\n    type: transformedEntityType,\n    inner: transformedEntityInner,\n  };\n}\n\nexport function FilesTreeEntity({\n  children,\n  className,\n  leaf,\n  tree,\n  setTree,\n  ...props\n}: React.DetailedHTMLProps<\n  React.HTMLAttributes<HTMLDivElement>,\n  HTMLDivElement\n> &\n  FilesTreeEntityProps) {\n  const entityData = transformLeafToEntity(leaf);\n  const renderCb = useCallback(\n    (entityProps: EntityProps) => {\n      const filesTreeType =\n        entityProps.data.type === EntityType.folder\n          ? FILES_TREE_TYPES.folder\n          : FILES_TREE_TYPES.file;\n      return (\n        <FilesTreePlot\n          tree={tree}\n          setTree={setTree}\n          id={entityProps.data.id}\n          type={filesTreeType}\n          key={entityProps.data.time + entityProps.data.name}>\n          <FilesTreeItem\n            type={filesTreeType}\n            id={entityProps.data.id}\n            tree={tree}\n            setTree={setTree}>\n            <Entity {...entityProps} />\n          </FilesTreeItem>\n        </FilesTreePlot>\n      );\n    },\n    [setTree, tree],\n  );\n  return (\n    <Entity\n      className={cn('files-tree-entity', className)}\n      {...props}\n      data={entityData}\n      innerComponent={renderCb}\n    />\n  );\n}\n",{"ruleId":"87","replacedBy":"88"},{"ruleId":"89","replacedBy":"90"},{"ruleId":"91","severity":1,"message":"92","line":1,"column":30,"nodeType":"93","messageId":"94","endLine":1,"endColumn":39},{"ruleId":"91","severity":1,"message":"95","line":3,"column":23,"nodeType":"93","messageId":"94","endLine":3,"endColumn":40},{"ruleId":"91","severity":1,"message":"96","line":5,"column":10,"nodeType":"93","messageId":"94","endLine":5,"endColumn":22},{"ruleId":"91","severity":1,"message":"97","line":107,"column":10,"nodeType":"93","messageId":"94","endLine":107,"endColumn":20},{"ruleId":"91","severity":1,"message":"98","line":107,"column":22,"nodeType":"93","messageId":"94","endLine":107,"endColumn":35},"no-native-reassign",["99"],"no-negated-in-lhs",["100"],"@typescript-eslint/no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'DragSourceMonitor' is defined but never used.","'TouchBackend' is defined but never used.","'lastDropId' is assigned a value but never used.","'setLastDropId' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]