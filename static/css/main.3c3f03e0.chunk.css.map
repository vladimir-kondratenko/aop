{"version":3,"sources":["webpack://src/index.scss","webpack://src/components/logo/index.css","webpack://src/components/menu/index.scss","webpack://src/sass-helpers/media.scss","webpack://src/components/icons/index.css","webpack://src/components/aside/index.scss","webpack://src/components/hedaer/index.css","webpack://src/components/layout/index.scss","webpack://node_modules/include-media/dist/_include-media.scss","webpack://src/components/button/index.scss","webpack://src/components/main/index.css","webpack://src/components/page/index.scss","webpack://src/components/input/index.scss","webpack://src/components/prompt/index.scss","webpack://src/components/modal/index.scss","webpack://src/pages/practical/index.scss","webpack://src/components/files-tree/index.scss","webpack://src/components/entity/index.scss"],"names":[],"mappings":"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","file":"main.3c3f03e0.chunk.css","sourcesContent":["@font-face {\n  font-family: 'GT Walsheim';\n  font-weight: 400;\n  src: url('./assests/fonts/GT-Walsheim-Regular-Trial.woff2') format('woff2');\n}\n\n@font-face {\n  font-family: 'GT Walsheim';\n  font-weight: 700;\n  src: url('./assests/fonts/GT-Walsheim-Bold-Trial.woff2') format('woff2');\n}\n\n/* variables */\n\n:root {\n  /* colors */\n  --GRAY1: #2c2c2c;\n  --GRAY2: #fff;\n  --GRAY3: #efefef;\n  --GRAY4: #c4c4c4;\n  --COLOR1: #00ff9d;\n  --COLOR2: #26009e;\n  --COLOR3: #250d71;\n  --COLOR4: #18c100;\n  /* layout */\n  --HEDADER_HEIGHT: 78px;\n  --ASIDE_WIDTH: 300px;\n  /* z-index */\n  --Z-BASE: 1;\n  --Z-ACTIVE: 5;\n  --Z-FIXED: 10;\n}\n\n*,\n*::before,\n*::after {\n  box-sizing: border-box;\n}\n\nhtml,\nbody {\n  height: 100%;\n  overflow: hidden;\n}\n\nbody {\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  margin: 0;\n  font-family: 'GT Walsheim', sans-serif;\n}\n\n#root {\n  height: 100%;\n}\n",".logo {\n  width: 1em;\n  height: 0.548em;\n}\n","@import '../../sass-helpers/media';\n\n.menu {\n  color: var(--GRAY2);\n  font-size: 16px;\n}\n\n.menu__list {\n  margin: 0;\n  padding: 0;\n  list-style: none;\n}\n\n.menu__btn {\n  position: relative;\n  display: inline-flex;\n  width: 100%;\n  align-items: center;\n  height: var(--menu__btn-height, auto);\n  padding-right: 10px;\n  text-decoration: none;\n  color: var(--GRAY2);\n  &:visited {\n    color: inherit;\n  }\n  &[aria-current='page'],\n  &:focus {\n    color: var(--COLOR1);\n    cursor: pointer;\n  }\n  @include hover() {\n    color: var(--COLOR1);\n    cursor: pointer;\n  }\n}\n\n.menu__child-indicator {\n  position: absolute;\n  right: 0;\n  font-size: 6px;\n}\n","@import '../../node_modules/include-media/dist/include-media';\n$breakpoints: (\n  'phone': 320px,\n  'tablet': 414px,\n  'desktop': 962px,\n);\n\n/* fixes sticky hover effect on mobile */\n@mixin hover {\n  @media (hover: hover) {\n    &:hover {\n      @content;\n    }\n  }\n}\n",".icon {\n  display: inline-block;\n}\n\nsvg.icon * {\n  stroke: none;\n  fill: currentColor !important;\n}\n",".aside {\n  display: grid;\n  grid-template-rows: 171px auto;\n  width: 100%;\n  height: 100%;\n  background-color: var(--GRAY1);\n  color: var(--GRAY2);\n}\n\n.aside__logo {\n  display: flex;\n  align-items: flex-end;\n  justify-content: center;\n  width: 100%;\n}\n\n.aside__menu {\n  --menu__btn-height: 50px;\n\n  padding: 48px 35px 22px 36px;\n  overflow: auto;\n}\n",".header {\n  display: flex;\n  align-items: center;\n  height: 100%;\n  background-color: var(--GRAY2);\n  padding-left: 39px;\n}\n\n.header__title {\n  margin: 0;\n  font-size: 24px;\n  font-weight: 700;\n}\n\n.header__icon {\n  margin-left: 22px;\n}\n","@import '../../sass-helpers/media';\n\n.layout {\n  display: grid;\n  grid-template-areas:\n    'header'\n    'main';\n  height: 100%;\n  overflow: hidden;\n  grid-template-rows: var(--HEDADER_HEIGHT) calc(100% - var(--HEDADER_HEIGHT));\n  grid-template-columns: 1fr;\n  background-color: var(--GRAY3);\n  @include media('>=desktop') {\n    grid-template-areas:\n      'aside header'\n      'aside main';\n    grid-template-columns: var(--ASIDE_WIDTH) 1fr;\n  }\n}\n\n.layout__aside {\n  grid-area: aside;\n  @include media('<desktop') {\n    position: fixed;\n    top: 0;\n    left: 0;\n    height: 100%;\n    transform: translate(-100%, 0);\n    transition: 0.3s transform ease-out;\n    z-index: var(--Z-ACTIVE);\n    .layout--aside-open & {\n      transform: translate(0, 0);\n    }\n  }\n  @include media('>=desktop') {\n    position: static;\n  }\n}\n\n.layout__aside-underlay.layout__aside-underlay {\n  display: none;\n  @include media('<desktop') {\n    position: fixed;\n    top: 0;\n    left: 0;\n    width: 300vw;\n    height: 100%;\n    background-color: rgba(0, 0, 0, 0.5);\n    .layout--aside-open & {\n      display: block;\n    }\n  }\n  .layout__toggle-icon {\n    display: none;\n  }\n}\n\n.layout__main {\n  grid-area: main;\n  padding: 15px;\n  @include media('>=desktop') {\n    padding: 41px 39px 35px 41px;\n  }\n}\n\n.layout__header {\n  grid-area: header;\n}\n\n.layout__toggle {\n  display: flex;\n  align-items: center;\n}\n\n.layout__toggle-icon {\n  display: none;\n  @include media('<desktop') {\n    display: block;\n    position: relative;\n    transform: rotate(180deg);\n    font-size: 12px;\n    margin-top: -2px;\n    margin-right: 5px;\n  }\n}\n","@charset \"UTF-8\";\n\n//     _            _           _                           _ _\n//    (_)          | |         | |                         | (_)\n//     _ _ __   ___| |_   _  __| | ___   _ __ ___   ___  __| |_  __ _\n//    | | '_ \\ / __| | | | |/ _` |/ _ \\ | '_ ` _ \\ / _ \\/ _` | |/ _` |\n//    | | | | | (__| | |_| | (_| |  __/ | | | | | |  __/ (_| | | (_| |\n//    |_|_| |_|\\___|_|\\__,_|\\__,_|\\___| |_| |_| |_|\\___|\\__,_|_|\\__,_|\n//\n//      Simple, elegant and maintainable media queries in Sass\n//                        v1.4.9\n//\n//                http://include-media.com\n//\n//         Authors: Eduardo Boucas (@eduardoboucas)\n//                  Hugo Giraudel (@hugogiraudel)\n//\n//      This project is licensed under the terms of the MIT license\n\n\n////\n/// include-media library public configuration\n/// @author Eduardo Boucas\n/// @access public\n////\n\n\n///\n/// Creates a list of global breakpoints\n///\n/// @example scss - Creates a single breakpoint with the label `phone`\n///  $breakpoints: ('phone': 320px);\n///\n$breakpoints: (\n  'phone': 320px,\n  'tablet': 768px,\n  'desktop': 1024px\n) !default;\n\n\n///\n/// Creates a list of static expressions or media types\n///\n/// @example scss - Creates a single media type (screen)\n///  $media-expressions: ('screen': 'screen');\n///\n/// @example scss - Creates a static expression with logical disjunction (OR operator)\n///  $media-expressions: (\n///    'retina2x': '(-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi)'\n///  );\n///\n$media-expressions: (\n  'screen': 'screen',\n  'print': 'print',\n  'handheld': 'handheld',\n  'landscape': '(orientation: landscape)',\n  'portrait': '(orientation: portrait)',\n  'retina2x': '(-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi), (min-resolution: 2dppx)',\n  'retina3x': '(-webkit-min-device-pixel-ratio: 3), (min-resolution: 350dpi), (min-resolution: 3dppx)'\n) !default;\n\n\n///\n/// Defines a number to be added or subtracted from each unit when declaring breakpoints with exclusive intervals\n///\n/// @example scss - Interval for pixels is defined as `1` by default\n///  @include media('>128px') {}\n///\n///  /* Generates: */\n///  @media (min-width: 129px) {}\n///\n/// @example scss - Interval for ems is defined as `0.01` by default\n///  @include media('>20em') {}\n///\n///  /* Generates: */\n///  @media (min-width: 20.01em) {}\n///\n/// @example scss - Interval for rems is defined as `0.1` by default, to be used with `font-size: 62.5%;`\n///  @include media('>2.0rem') {}\n///\n///  /* Generates: */\n///  @media (min-width: 2.1rem) {}\n///\n$unit-intervals: (\n  'px': 1,\n  'em': 0.01,\n  'rem': 0.1,\n  '': 0\n) !default;\n\n///\n/// Defines whether support for media queries is available, useful for creating separate stylesheets\n/// for browsers that don't support media queries.\n///\n/// @example scss - Disables support for media queries\n///  $im-media-support: false;\n///  @include media('>=tablet') {\n///    .foo {\n///      color: tomato;\n///    }\n///  }\n///\n///  /* Generates: */\n///  .foo {\n///    color: tomato;\n///  }\n///\n$im-media-support: true !default;\n\n///\n/// Selects which breakpoint to emulate when support for media queries is disabled. Media queries that start at or\n/// intercept the breakpoint will be displayed, any others will be ignored.\n///\n/// @example scss - This media query will show because it intercepts the static breakpoint\n///  $im-media-support: false;\n///  $im-no-media-breakpoint: 'desktop';\n///  @include media('>=tablet') {\n///    .foo {\n///      color: tomato;\n///    }\n///  }\n///\n///  /* Generates: */\n///  .foo {\n///    color: tomato;\n///  }\n///\n/// @example scss - This media query will NOT show because it does not intercept the desktop breakpoint\n///  $im-media-support: false;\n///  $im-no-media-breakpoint: 'tablet';\n///  @include media('>=desktop') {\n///    .foo {\n///      color: tomato;\n///    }\n///  }\n///\n///  /* No output */\n///\n$im-no-media-breakpoint: 'desktop' !default;\n\n///\n/// Selects which media expressions are allowed in an expression for it to be used when media queries\n/// are not supported.\n///\n/// @example scss - This media query will show because it intercepts the static breakpoint and contains only accepted media expressions\n///  $im-media-support: false;\n///  $im-no-media-breakpoint: 'desktop';\n///  $im-no-media-expressions: ('screen');\n///  @include media('>=tablet', 'screen') {\n///    .foo {\n///      color: tomato;\n///    }\n///  }\n///\n///   /* Generates: */\n///   .foo {\n///     color: tomato;\n///   }\n///\n/// @example scss - This media query will NOT show because it intercepts the static breakpoint but contains a media expression that is not accepted\n///  $im-media-support: false;\n///  $im-no-media-breakpoint: 'desktop';\n///  $im-no-media-expressions: ('screen');\n///  @include media('>=tablet', 'retina2x') {\n///    .foo {\n///      color: tomato;\n///    }\n///  }\n///\n///  /* No output */\n///\n$im-no-media-expressions: ('screen', 'portrait', 'landscape') !default;\n\n////\n/// Cross-engine logging engine\n/// @author Hugo Giraudel\n/// @access private\n////\n\n\n///\n/// Log a message either with `@error` if supported\n/// else with `@warn`, using `feature-exists('at-error')`\n/// to detect support.\n///\n/// @param {String} $message - Message to log\n///\n@function im-log($message) {\n  @if feature-exists('at-error') {\n    @error $message;\n  } @else {\n    @warn $message;\n    $_: noop();\n  }\n\n  @return $message;\n}\n\n\n///\n/// Wrapper mixin for the log function so it can be used with a more friendly\n/// API than `@if im-log('..') {}` or `$_: im-log('..')`. Basically, use the function\n/// within functions because it is not possible to include a mixin in a function\n/// and use the mixin everywhere else because it's much more elegant.\n///\n/// @param {String} $message - Message to log\n///\n@mixin log($message) {\n  @if im-log($message) {}\n}\n\n\n///\n/// Function with no `@return` called next to `@warn` in Sass 3.3\n/// to trigger a compiling error and stop the process.\n///\n@function noop() {}\n\n///\n/// Determines whether a list of conditions is intercepted by the static breakpoint.\n///\n/// @param {Arglist}   $conditions  - Media query conditions\n///\n/// @return {Boolean} - Returns true if the conditions are intercepted by the static breakpoint\n///\n@function im-intercepts-static-breakpoint($conditions...) {\n  $no-media-breakpoint-value: map-get($breakpoints, $im-no-media-breakpoint);\n\n  @if not $no-media-breakpoint-value {\n    @if im-log('`#{$im-no-media-breakpoint}` is not a valid breakpoint.') {}\n  }\n\n  @each $condition in $conditions {\n    @if not map-has-key($media-expressions, $condition) {\n      $operator: get-expression-operator($condition);\n      $prefix: get-expression-prefix($operator);\n      $value: get-expression-value($condition, $operator);\n\n      // scss-lint:disable SpaceAroundOperator\n      @if ($prefix == 'max' and $value <= $no-media-breakpoint-value) or\n          ($prefix == 'min' and $value > $no-media-breakpoint-value) {\n        @return false;\n      }\n    } @else if not index($im-no-media-expressions, $condition) {\n      @return false;\n    }\n  }\n\n  @return true;\n}\n\n////\n/// Parsing engine\n/// @author Hugo Giraudel\n/// @access private\n////\n\n\n///\n/// Get operator of an expression\n///\n/// @param {String} $expression - Expression to extract operator from\n///\n/// @return {String} - Any of `>=`, `>`, `<=`, `<`, `≥`, `≤`\n///\n@function get-expression-operator($expression) {\n  @each $operator in ('>=', '>', '<=', '<', '≥', '≤') {\n    @if str-index($expression, $operator) {\n      @return $operator;\n    }\n  }\n\n  // It is not possible to include a mixin inside a function, so we have to\n  // rely on the `im-log(..)` function rather than the `log(..)` mixin. Because\n  // functions cannot be called anywhere in Sass, we need to hack the call in\n  // a dummy variable, such as `$_`. If anybody ever raise a scoping issue with\n  // Sass 3.3, change this line in `@if im-log(..) {}` instead.\n  $_: im-log('No operator found in `#{$expression}`.');\n}\n\n\n///\n/// Get dimension of an expression, based on a found operator\n///\n/// @param {String} $expression - Expression to extract dimension from\n/// @param {String} $operator - Operator from `$expression`\n///\n/// @return {String} - `width` or `height` (or potentially anything else)\n///\n@function get-expression-dimension($expression, $operator) {\n  $operator-index: str-index($expression, $operator);\n  $parsed-dimension: str-slice($expression, 0, $operator-index - 1);\n  $dimension: 'width';\n\n  @if str-length($parsed-dimension) > 0 {\n    $dimension: $parsed-dimension;\n  }\n\n  @return $dimension;\n}\n\n\n///\n/// Get dimension prefix based on an operator\n///\n/// @param {String} $operator - Operator\n///\n/// @return {String} - `min` or `max`\n///\n@function get-expression-prefix($operator) {\n  @return if(index(('<', '<=', '≤'), $operator), 'max', 'min');\n}\n\n\n///\n/// Get value of an expression, based on a found operator\n///\n/// @param {String} $expression - Expression to extract value from\n/// @param {String} $operator - Operator from `$expression`\n///\n/// @return {Number} - A numeric value\n///\n@function get-expression-value($expression, $operator) {\n  $operator-index: str-index($expression, $operator);\n  $value: str-slice($expression, $operator-index + str-length($operator));\n\n  @if map-has-key($breakpoints, $value) {\n    $value: map-get($breakpoints, $value);\n  } @else {\n    $value: to-number($value);\n  }\n\n  $interval: map-get($unit-intervals, unit($value));\n\n  @if not $interval {\n    // It is not possible to include a mixin inside a function, so we have to\n    // rely on the `im-log(..)` function rather than the `log(..)` mixin. Because\n    // functions cannot be called anywhere in Sass, we need to hack the call in\n    // a dummy variable, such as `$_`. If anybody ever raise a scoping issue with\n    // Sass 3.3, change this line in `@if im-log(..) {}` instead.\n    $_: im-log('Unknown unit `#{unit($value)}`.');\n  }\n\n  @if $operator == '>' {\n    $value: $value + $interval;\n  } @else if $operator == '<' {\n    $value: $value - $interval;\n  }\n\n  @return $value;\n}\n\n\n///\n/// Parse an expression to return a valid media-query expression\n///\n/// @param {String} $expression - Expression to parse\n///\n/// @return {String} - Valid media query\n///\n@function parse-expression($expression) {\n  // If it is part of $media-expressions, it has no operator\n  // then there is no need to go any further, just return the value\n  @if map-has-key($media-expressions, $expression) {\n    @return map-get($media-expressions, $expression);\n  }\n\n  $operator: get-expression-operator($expression);\n  $dimension: get-expression-dimension($expression, $operator);\n  $prefix: get-expression-prefix($operator);\n  $value: get-expression-value($expression, $operator);\n\n  @return '(#{$prefix}-#{$dimension}: #{$value})';\n}\n\n///\n/// Slice `$list` between `$start` and `$end` indexes\n///\n/// @access private\n///\n/// @param {List} $list - List to slice\n/// @param {Number} $start [1] - Start index\n/// @param {Number} $end [length($list)] - End index\n///\n/// @return {List} Sliced list\n///\n@function slice($list, $start: 1, $end: length($list)) {\n  @if length($list) < 1 or $start > $end {\n    @return ();\n  }\n\n  $result: ();\n\n  @for $i from $start through $end {\n    $result: append($result, nth($list, $i));\n  }\n\n  @return $result;\n}\n\n////\n/// String to number converter\n/// @author Hugo Giraudel\n/// @access private\n////\n\n\n///\n/// Casts a string into a number\n///\n/// @param {String | Number} $value - Value to be parsed\n///\n/// @return {Number}\n///\n@function to-number($value) {\n  @if type-of($value) == 'number' {\n    @return $value;\n  } @else if type-of($value) != 'string' {\n    $_: im-log('Value for `to-number` should be a number or a string.');\n  }\n\n  $first-character: str-slice($value, 1, 1);\n  $result: 0;\n  $digits: 0;\n  $minus: ($first-character == '-');\n  $numbers: ('0': 0, '1': 1, '2': 2, '3': 3, '4': 4, '5': 5, '6': 6, '7': 7, '8': 8, '9': 9);\n\n  // Remove +/- sign if present at first character\n  @if ($first-character == '+' or $first-character == '-') {\n    $value: str-slice($value, 2);\n  }\n\n  @for $i from 1 through str-length($value) {\n    $character: str-slice($value, $i, $i);\n\n    @if not (index(map-keys($numbers), $character) or $character == '.') {\n      @return to-length(if($minus, -$result, $result), str-slice($value, $i))\n    }\n\n    @if $character == '.' {\n      $digits: 1;\n    } @else if $digits == 0 {\n      $result: $result * 10 + map-get($numbers, $character);\n    } @else {\n      $digits: $digits * 10;\n      $result: $result + map-get($numbers, $character) / $digits;\n    }\n  }\n\n  @return if($minus, -$result, $result);\n}\n\n\n///\n/// Add `$unit` to `$value`\n///\n/// @param {Number} $value - Value to add unit to\n/// @param {String} $unit - String representation of the unit\n///\n/// @return {Number} - `$value` expressed in `$unit`\n///\n@function to-length($value, $unit) {\n  $units: ('px': 1px, 'cm': 1cm, 'mm': 1mm, '%': 1%, 'ch': 1ch, 'pc': 1pc, 'in': 1in, 'em': 1em, 'rem': 1rem, 'pt': 1pt, 'ex': 1ex, 'vw': 1vw, 'vh': 1vh, 'vmin': 1vmin, 'vmax': 1vmax);\n\n  @if not index(map-keys($units), $unit) {\n    $_: im-log('Invalid unit `#{$unit}`.');\n  }\n\n  @return $value * map-get($units, $unit);\n}\n\n///\n/// This mixin aims at redefining the configuration just for the scope of\n/// the call. It is helpful when having a component needing an extended\n/// configuration such as custom breakpoints (referred to as tweakpoints)\n/// for instance.\n///\n/// @author Hugo Giraudel\n///\n/// @param {Map} $tweakpoints [()] - Map of tweakpoints to be merged with `$breakpoints`\n/// @param {Map} $tweak-media-expressions [()] - Map of tweaked media expressions to be merged with `$media-expression`\n///\n/// @example scss - Extend the global breakpoints with a tweakpoint\n///  @include media-context(('custom': 678px)) {\n///    .foo {\n///      @include media('>phone', '<=custom') {\n///       // ...\n///      }\n///    }\n///  }\n///\n/// @example scss - Extend the global media expressions with a custom one\n///  @include media-context($tweak-media-expressions: ('all': 'all')) {\n///    .foo {\n///      @include media('all', '>phone') {\n///       // ...\n///      }\n///    }\n///  }\n///\n/// @example scss - Extend both configuration maps\n///  @include media-context(('custom': 678px), ('all': 'all')) {\n///    .foo {\n///      @include media('all', '>phone', '<=custom') {\n///       // ...\n///      }\n///    }\n///  }\n///\n@mixin media-context($tweakpoints: (), $tweak-media-expressions: ()) {\n  // Save global configuration\n  $global-breakpoints: $breakpoints;\n  $global-media-expressions: $media-expressions;\n\n  // Update global configuration\n  $breakpoints: map-merge($breakpoints, $tweakpoints) !global;\n  $media-expressions: map-merge($media-expressions, $tweak-media-expressions) !global;\n\n  @content;\n\n  // Restore global configuration\n  $breakpoints: $global-breakpoints !global;\n  $media-expressions: $global-media-expressions !global;\n}\n\n////\n/// include-media public exposed API\n/// @author Eduardo Boucas\n/// @access public\n////\n\n\n///\n/// Generates a media query based on a list of conditions\n///\n/// @param {Arglist}   $conditions  - Media query conditions\n///\n/// @example scss - With a single set breakpoint\n///  @include media('>phone') { }\n///\n/// @example scss - With two set breakpoints\n///  @include media('>phone', '<=tablet') { }\n///\n/// @example scss - With custom values\n///  @include media('>=358px', '<850px') { }\n///\n/// @example scss - With set breakpoints with custom values\n///  @include media('>desktop', '<=1350px') { }\n///\n/// @example scss - With a static expression\n///  @include media('retina2x') { }\n///\n/// @example scss - Mixing everything\n///  @include media('>=350px', '<tablet', 'retina3x') { }\n///\n@mixin media($conditions...) {\n  // scss-lint:disable SpaceAroundOperator\n  @if ($im-media-support and length($conditions) == 0) or\n      (not $im-media-support and im-intercepts-static-breakpoint($conditions...)) {\n    @content;\n  } @else if ($im-media-support and length($conditions) > 0) {\n    @media #{unquote(parse-expression(nth($conditions, 1)))} {\n      // Recursive call\n      @include media(slice($conditions, 2)...) {\n        @content;\n      }\n    }\n  }\n}\n",".button {\n  appearance: none;\n  display: inline-flex;\n  height: var(--button__height, auto);\n  padding: 0;\n  margin: 0;\n  font: inherit;\n  color: inherit;\n  background-color: transparent;\n  border: 0;\n  &:hover {\n    cursor: pointer;\n  }\n}\n\n.button--fullwidth {\n  width: 100%;\n}\n\n.button--primary {\n  --button__height: 38px;\n  align-items: center;\n  justify-content: center;\n  padding-left: 15px;\n  padding-right: 15px;\n  background-color: var(--COLOR2);\n  border-radius: 6px;\n  color: var(--GRAY2);\n  transition: background-color 100ms ease-out;\n  &:hover {\n    background-color: var(--COLOR3);\n    transition: background-color 100ms ease-out;\n  }\n}\n",".main {\n  height: 100%;\n  background-color: var(--GRAY2);\n}\n","@import \"../../sass-helpers/media\";\n\n.page {\n  height: 100%;\n  padding: 15px;\n  @include media('>=desktop') {\n    padding: 30px 30px 30px 38px;\n  }\n}\n",".input {\n  position: relative;\n  display: inline-flex;\n  flex-direction: column;\n  &:focus-within {\n    --input__placehodler-opacity: 0;\n  }\n}\n\n.input__label {\n  margin-bottom: 6px;\n}\n\n.input--fullwidth {\n  width: 100%;\n}\n\n.input__inner {\n  position: relative;\n  display: flex;\n  align-items: center;\n  width: 100%;\n  border: 1px solid var(--GRAY4);\n  height: var(--input__height, 48px);\n  padding: 0 20px;\n  border-radius: 3px;\n}\n\n.input__placeholder {\n  position: absolute;\n  top: 50%;\n  transform: translateY(-50%);\n  opacity: var(--input__placehodler-opacity, 1);\n  font-size: 16px;\n  color: var(--GRAY4);\n  pointer-events: none;\n  .input--with-icon & {\n    text-indent: 32px;\n  }\n}\n\n.input__icon {\n  margin: 0 20px 0 0;\n}\n\n.input__control {\n  appearance: none;\n  width: 100%;\n  height: 100%;\n  margin: 0;\n  border: 0;\n  outline: 0;\n  font: inherit;\n  &:not([value='']) + span {\n    --input__placehodler-opacity: 0;\n  }\n}\n",".prompt {\n  --input__height: 40px;\n  padding: 27px 35px 20px;\n  color: var(--GRAY1);\n  background-color: var(--GRAY2);\n  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.25);\n  border-radius: 6px;\n}\n\n.prompt__header {\n  margin-bottom: 33px;\n}\n\n.prompt__title {\n  margin: 0;\n  font-size: 20px;\n}\n\n.prompt__footer {\n  display: flex;\n  align-items: center;\n  justify-content: flex-end;\n  margin-top: 36px;\n  color: var(--COLOR2);\n}\n\n.prompt__resolve {\n  margin-left: 20px;\n}\n",".modal--open {\n  left: 0 !important;\n  top: 0 !important;\n  width: 100%;\n  height: 100%;\n  transform: none !important;\n  background-color: rgba(0, 0, 0, 0.5);\n  z-index: var(--Z-FIXED);\n}\n\n.modal__content {\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  width: calc(100% - 30px);\n  max-width: 471px;\n  min-width: 290px;\n  z-index: calc(var(--Z-FIXED) + 2);\n}\n\n.modal__underlay {\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  z-index: calc(var(--Z-FIXED) + 1);\n}\n","@import '../../../src/sass-helpers/media';\n\n.practical {\n  --practical__header_height: 110px;\n  display: grid;\n  grid-template-rows: var(--practical__header_height) calc(\n      100% - var(--practical__header_height)\n    );\n  width: 100%;\n  max-width: 841px;\n  @include media('>=desktop') {\n    --practical__header_height: 48px;\n  }\n}\n\n.practical__header {\n  display: grid;\n  grid-template-areas:\n    'search'\n    'controls';\n  grid-gap: 24px;\n  grid-template-columns: 100%;\n  justify-content: space-between;\n  align-items: center;\n  @include media('>=desktop') {\n    grid-template-areas: 'search controls';\n    grid-template-columns: auto auto;\n  }\n}\n\n.practical__body {\n  padding: 50px 0 0;\n}\n\n.practical__content {\n  height: 100%;\n  padding: 0 5px;\n  margin: 0 -5px;\n  overflow: auto;\n}\n\n.practical__search {\n  grid-area: search;\n}\n\n.practical__controls {\n  grid-area: controls;\n  display: grid;\n  grid-template-columns: 126px 107px;\n  justify-content: space-around;\n  @include media('>=tablet') {\n    grid-template-columns: 126px 107px;\n    grid-gap: 24px;\n    justify-content: flex-start;\n  }\n  @include media('>=desktop') {\n    justify-content: space-between;\n  }\n}\n\n.practical__list {\n  padding: 0;\n  list-style: none;\n  li + li {\n    margin-top: 3px;\n  }\n}\n",".files-tree {\n}\n\n.files-tree__plot {\n  position: relative;\n}\n\n.files-tree__plot--is-over > .files-tree__item > .entity > .entity__main {\n  box-shadow: 0 0 0 2px var(--COLOR4) inset;\n}\n\n.files-tree__plot--root.files-tree__plot--is-over {\n  padding-bottom: 50px;\n}\n","@import '../../sass-helpers/media';\n\n.entity {\n}\n\n.entity__main {\n  position: relative;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  height: 49px;\n  padding: 0 15px;\n  box-shadow: var(--entity-shadow, 0 2px 4px rgba(0, 0, 0, 0.15));\n  &:hover {\n    --entity-shadow: 0 4px 4px rgba(0, 0, 0, 0.15);\n    --entity-hover-display: block;\n  }\n  @include media('>=tablet') {\n    padding: 0 32px 0 29px;\n  }\n}\n\n.entity__hover {\n  display: var(--entity-hover-display, none);\n  position: absolute;\n  left: 11px;\n  top: 50%;\n  transform: translateY(-50%);\n  color: rgba(229, 229, 229, 1);\n  font-size: 7px;\n}\n\n.entity__info {\n  display: flex;\n  align-items: center;\n}\n\n.entity__type {\n  display: flex;\n  align-items: center;\n  margin-right: 11px;\n}\n\n.entity__name {\n  margin-right: 18px;\n  max-width: 180px;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n}\n\n.entity__folder-sign {\n  position: relative;\n  font-size: 12px;\n  .entity--open > .entity__main & {\n    transform-origin: 50% 50%;\n    transform: rotate(180deg);\n  }\n}\n\n.entity__meta {\n  display: flex;\n  justify-content: space-between;\n  flex: 1;\n  max-width: 38%;\n}\n\n.entity__time {\n  display: none;\n  @include media('>=520px') {\n    display: flex;\n    align-items: center;\n    font-size: 16px;\n    color: rgba(196, 196, 196, 1);\n    text-align: left;\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n  }\n}\n\n.entity__menu {\n  display: flex;\n  align-items: center;\n  margin-right: 0;\n  margin-left: auto;\n  font-size: 22px;\n  &:hover {\n    cursor: pointer;\n  }\n}\n\n.entity__inner {\n  margin: 0 0 4px 0;\n  padding: 0 0 0 5%;\n  display: none;\n  .entity--open > & {\n    display: block;\n  }\n}\n"]}